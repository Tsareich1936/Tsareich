#!gfx:interface\countrytechtreeview.gfx
#!gfx:interface\general_stuff.gfx
guiTypes = {
	containerWindowType = {
		name = TR_economicview #a.k.a TR_EV
		# name = "countrypoliticsview"
		position = { x=-606 y=78}
		show_position = { x=-6 y =78 }
		show_animation_type = decelerated
		hide_animation_type = accelerated
		animation_time = 300
		size = { width=550 height=100%% }

		#hide_sound = menu_close_window
		show_sound = menu_open_window

		background = {
			name = "TR_EV_Background"
			quadTextureSprite ="GFX_tiled_plain_bg"
		}
		iconType ={
			name ="TR_EV_header_bg"
			spriteType = "GFX_header_bg"
			position = { x= 5 y = 07 }
			Orientation = "UPPER_LEFT"
		}
		instantTextboxType = {
			name = "economic_title"
			position = { x = 45 y = 8 }
			textureFile = ""
			font = "hoi_36header"
			borderSize = {x = 0 y = 0}
			text = "ECONOMIC_ECONOMIC"
			maxWidth = 400
			maxHeight = 20
			fixedsize = yes
		}
		buttonType = {
			name = "TR_EV_close_button"
			position = { x = -42 y = 9 }
			quadTextureSprite ="GFX_closebutton"
			buttonFont = "Main_14_black"
			shortcut = "ESCAPE"
			Orientation = "UPPER_RIGHT"
			clicksound = click_close
			pdx_tooltip = "CLOSE"
		}

		containerWindowType = {
			name = TR_EV_budget_income
			position = {
				x = -30
				y = 42
			}	
			size = { width = 350 height= 250 }
			orientation = UPPER_LEFT
			instantTextBoxType = {
				position = {
					x = 50
					y = 15
				}
				name = budget_income_title
				text = "BUDGET_INCOME"
				font = hoi_24header
			}
		}
	}

	containerWindowType = {
		name = TR_EV_budget_income_graph
		position = {
			x = -10
			y = -20
		}
		
		# background = {
		# 	name = "background"		
		# 	quadTextureSprite = "GFX_Line_Graph_Background"
		# 	alwaystransparent = yes
		# }

		# Chart background
		iconType = {
			name = "chart"
			spriteType = "GFX_Line_Graph_Chart"
			position = { x = 90 y = 70 }
		}

		# Container which will hold each of our line segments
		gridboxtype = {
			name = "line_segments"
			position = { x = 99 y = 66 }
			size = { width = 0 height = 200 }
			slotsize = { width = 10 height = 200 }
			max_slots_horizontal = 20
			add_horizontal = yes
		}

		# y-axis labels, very optional
		instantTextboxType = {
			name = "100pct"
			position = { x= 34 y = 65}
			font = "garamond_14"
			text = "100%"
			maxWidth = 50
			format = right
		}
		instantTextboxType = {
			name = "80pct"
			position = { x= 34 y = 85}
			font = "garamond_14"
			text = "80%"
			maxWidth = 50
			format = right
		}
		instantTextboxType = {
			name = "60pct"
			position = { x= 34 y = 105}
			font = "garamond_14"
			text = "60%"
			maxWidth = 50
			format = right
		}
		instantTextboxType = {
			name = "40pct"
			position = { x= 34 y = 125}
			font = "garamond_14"
			text = "40%"
			maxWidth = 50
			format = right
		}
		instantTextboxType = {
			name = "20pct"
			position = { x= 34 y = 145}
			font = "garamond_14"
			text = "20%"
			maxWidth = 50
			format = right
		}
		instantTextboxType = {
			name = "0pct"
			position = { x= 34 y = 165}
			font = "garamond_14"
			text = "0%"
			maxWidth = 50
			format = right
		}
	}
	containerWindowType = {
		name = "line_graph_line_segment"
		size = { width = 10 height = 200 }
		position = { x = 0 y = 0 }

		# Line segment progress bar, using our custom asset with custom shader
		iconType = {
			name = "segment"
			spriteType = "GFX_Line_Segment"
			position = { x = 0 y = 0 }
			frame = 57
		}

		# Optional, x-axis label which corresponds to the value of this segment
		instantTextboxType = {
			name = "label"
			position = { x = -15 y = 112}
			font = "garamond_14"
			text = "line_graph_data_label"
			maxWidth = 30
			format = center
		}
	}
}